import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { QRCodeSVG } from 'qrcode.react';
import { useNotification } from '../hooks/useNotification';
import bookingService from '../services/bookingService';
import vietqrService from '../services/vietqrService';

interface BookingCountdownModalProps {
  isOpen: boolean;
  onClose: () => void;
  bookingId: string;
  totalAmount: number;
  roomNumber: string;
  checkInDate: string;
  checkOutDate: string;
}

const BookingCountdownModal: React.FC<BookingCountdownModalProps> = ({
  isOpen,
  onClose,
  bookingId,
  totalAmount,
  roomNumber,
  checkInDate,
  checkOutDate
}) => {
  const navigate = useNavigate();
  const { showSuccess, showError, NotificationContainer } = useNotification();
  const [timeLeft, setTimeLeft] = useState(5 * 60); // 5 ph√∫t = 300 gi√¢y
  const [isExpired, setIsExpired] = useState(false);
  const [isCancelling, setIsCancelling] = useState(false);
  const [showPaymentConfirmation, setShowPaymentConfirmation] = useState(false);

  useEffect(() => {
    if (!isOpen) return;

    // Reset states when modal opens
    setIsExpired(false);
    setTimeLeft(5 * 60);

    const timer = setInterval(() => {
      setTimeLeft((prev) => {
        if (prev <= 1) {
          setIsExpired(true);
          clearInterval(timer);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, [isOpen]);

  const formatTime = (seconds: number) => {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
  };

  const generateVietQR = () => {
    return vietqrService.generateBookingVietQR(
      bookingId,
      totalAmount,
      roomNumber,
      checkInDate,
      checkOutDate
    );
  };

  const handleCancelBooking = async () => {
    if (isCancelling) return;
    
    setIsCancelling(true);
    try {
      // Ki·ªÉm tra xem user ƒë√£ ƒëƒÉng nh·∫≠p hay ch∆∞a
      const token = localStorage.getItem('accessToken');
      if (token) {
        // User ƒë√£ ƒëƒÉng nh·∫≠p
        await bookingService.cancelBooking(bookingId);
      } else {
        // Guest ch∆∞a ƒëƒÉng nh·∫≠p
        await bookingService.cancelGuestBooking(bookingId);
      }
      showSuccess('ƒê√£ h·ªßy ƒë·∫∑t ph√≤ng th√†nh c√¥ng!');
      onClose();
    } catch (error: any) {
      console.error('L·ªói khi h·ªßy booking:', error);
      showError('Kh√¥ng th·ªÉ h·ªßy ƒë·∫∑t ph√≤ng: ' + (error.response?.data?.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh'));
    } finally {
      setIsCancelling(false);
    }
  };

  const handlePaymentConfirmation = () => {
    setShowPaymentConfirmation(true);
  };


  if (!isOpen) return null;

  return (
    <div className="booking-countdown-overlay">
      <div className="booking-countdown-modal">
        <div className="booking-countdown-header">
          <h3>X√°c nh·∫≠n thanh to√°n</h3>
          <button className="close-btn" onClick={onClose}>√ó</button>
        </div>
        
        <div className="booking-countdown-content">
          <div className="booking-info">
            <h4>Th√¥ng tin ƒë·∫∑t ph√≤ng</h4>
            <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> {bookingId}</p>
            <p><strong>Ph√≤ng:</strong> {roomNumber}</p>
            <p><strong>Nh·∫≠n ph√≤ng:</strong> {checkInDate}</p>
            <p><strong>Tr·∫£ ph√≤ng:</strong> {checkOutDate}</p>
            <p><strong>T·ªïng ti·ªÅn:</strong> {totalAmount.toLocaleString('vi-VN')} VNƒê</p>
          </div>

          <div className="countdown-section">
            <h4>Th·ªùi gian gi·ªØ ph√≤ng</h4>
            <div className={`countdown-timer ${isExpired ? 'expired' : ''}`}>
              {isExpired ? 'H·∫æT TH·ªúI GIAN' : formatTime(timeLeft)}
            </div>
            <p className="countdown-message">
              {isExpired 
                ? 'ƒê∆°n ƒë·∫∑t ph√≤ng ƒë√£ h·∫øt h·∫°n. Vui l√≤ng ƒë·∫∑t l·∫°i.' 
                : 'Vui l√≤ng thanh to√°n trong th·ªùi gian tr√™n ƒë·ªÉ gi·ªØ ph√≤ng.'
              }
            </p>
          </div>

          <div className="qr-section">
            <h4>Qu√©t m√£ VietQR ƒë·ªÉ thanh to√°n</h4>
            
            {/* VietQR Header */}
            <div className="vietqr-header">
              <div className="vietqr-logo">
                <span className="vietqr-text">VIETQR</span>
                <div className="vietqr-badges">
                  <span className="badge">napas 247</span>
                  <span className="badge bank-badge">{vietqrService.getConfig().bankName}</span>
                </div>
              </div>
            </div>

            {/* QR Code Container */}
            <div className="qr-container">
              <div style={{ 
                width: '250px', 
                height: '250px', 
                display: 'flex', 
                alignItems: 'center', 
                justifyContent: 'center',
                background: 'white',
                border: '1px solid #e5e7eb',
                borderRadius: '8px'
              }}>
                <QRCodeSVG 
                  value={generateVietQR()}
                  size={200}
                  level="M"
                  includeMargin={true}
                />
              </div>
            </div>

            {/* Bank Transfer Details */}
            <div className="bank-transfer-details">
              <div className="transfer-info">
                <p><strong>N·ªôi dung CK:</strong> HotelHub{roomNumber}</p>
                <p><strong>S·ªë ti·ªÅn:</strong> {totalAmount.toLocaleString('vi-VN')} VND</p>
                <p><strong>T√™n ch·ªß TK:</strong> HOTEL HUB COMPANY</p>
                <p><strong>S·ªë TK:</strong> {vietqrService.getConfig().bankAccount}</p>
                <p><strong>Ng√¢n h√†ng:</strong> {vietqrService.getConfig().bankName}</p>
                <div style={{ 
                  marginTop: '12px', 
                  padding: '8px 12px', 
                  background: '#e8f5e8', 
                  borderRadius: '6px', 
                  border: '1px solid #4caf50',
                  fontSize: '12px',
                  color: '#2e7d32'
                }}>
                  <strong>üí° H∆∞·ªõng d·∫´n:</strong> Qu√©t m√£ QR b·∫±ng app ng√¢n h√†ng ƒë·ªÉ t·ª± ƒë·ªông ƒëi·ªÅn th√¥ng tin chuy·ªÉn kho·∫£n
                </div>
              </div>
            </div>

            <p className="qr-instruction">
              S·ª≠ d·ª•ng ·ª©ng d·ª•ng ng√¢n h√†ng ƒë·ªÉ qu√©t m√£ QR v√† thanh to√°n
            </p>
          </div>
        </div>

        <div className="booking-countdown-footer">
          <button 
            className="btn-secondary" 
            onClick={isExpired ? onClose : handleCancelBooking}
            disabled={isCancelling}
          >
            {isCancelling ? 'ƒêang h·ªßy...' : (isExpired ? 'ƒê√≥ng' : 'H·ªßy ƒë·∫∑t ph√≤ng')}
          </button>
          <button 
            className="btn-primary" 
            onClick={handlePaymentConfirmation}
            disabled={isExpired}
          >
            ƒê√£ thanh to√°n
          </button>
        </div>
      </div>
      
      {/* Modal x√°c nh·∫≠n thanh to√°n */}
      {showPaymentConfirmation && (
        <div className="modal-overlay">
          <div className="modal-content">
            <div className="modal-header">
              <h3>X√°c nh·∫≠n thanh to√°n</h3>
            </div>
            <div className="modal-body">
              <div style={{ textAlign: 'center', marginBottom: '20px' }}>
                <div style={{ fontSize: '48px', marginBottom: '16px' }}>‚úÖ</div>
                <p style={{ fontSize: '18px', marginBottom: '8px', fontWeight: '600', color: '#28a745' }}>
                  C·∫£m ∆°n b·∫°n ƒë√£ thanh to√°n!
                </p>
                <p style={{ fontSize: '16px', marginBottom: '16px', color: '#6c757d' }}>
                  Xin vui l√≤ng ch·ªù ƒë·ªÉ b√™n ph√≠a admin x√°c nh·∫≠n thanh to√°n c·ªßa b·∫°n.
                </p>
                <div style={{ 
                  background: '#e8f5e8', 
                  padding: '16px', 
                  borderRadius: '8px', 
                  margin: '16px 0',
                  border: '1px solid #4caf50'
                }}>
                  <p style={{ margin: '4px 0', fontSize: '14px', color: '#2e7d32' }}>
                    <strong>üìß Th√¥ng b√°o:</strong> Ch√∫ng t√¥i s·∫Ω g·ª≠i email x√°c nh·∫≠n ƒë·∫øn b·∫°n sau khi admin x√°c nh·∫≠n thanh to√°n.
                  </p>
                  <p style={{ margin: '4px 0', fontSize: '14px', color: '#2e7d32' }}>
                    <strong>‚è∞ Th·ªùi gian:</strong> Th∆∞·ªùng trong v√≤ng 5-10 ph√∫t l√†m vi·ªác.
                  </p>
                </div>
                
                <div style={{ 
                  background: '#f0f9ff', 
                  padding: '16px', 
                  borderRadius: '8px', 
                  margin: '16px 0',
                  border: '1px solid #0ea5e9'
                }}>
                  <p style={{ margin: '4px 0', fontSize: '14px', color: '#0c4a6e' }}>
                    <strong>üí° L∆∞u √Ω:</strong> B·∫°n c√≥ th·ªÉ xem chi ti·∫øt ƒë·∫∑t ph√≤ng ngay b√¢y gi·ªù ho·∫∑c ch·ªù admin x√°c nh·∫≠n.
                  </p>
                </div>
              </div>
            </div>
            <div className="modal-footer" style={{ 
              display: 'flex', 
              justifyContent: 'center', 
              gap: '12px',
              padding: '20px 24px',
              borderTop: '1px solid #e9ecef'
            }}>
              <button 
                className="btn-primary" 
                onClick={() => {
                  navigate(`/my-bookings/${bookingId}`);
                  onClose();
                }}
                style={{ 
                  background: '#10b981',
                  border: '1px solid #10b981',
                  color: 'white',
                  padding: '12px 24px',
                  borderRadius: '8px',
                  fontSize: '16px',
                  fontWeight: '600',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onMouseEnter={(e) => {
                  const target = e.target as HTMLButtonElement;
                  target.style.background = '#059669';
                  target.style.transform = 'translateY(-2px)';
                  target.style.boxShadow = '0 8px 20px rgba(16, 185, 129, 0.3)';
                }}
                onMouseLeave={(e) => {
                  const target = e.target as HTMLButtonElement;
                  target.style.background = '#10b981';
                  target.style.transform = 'translateY(0)';
                  target.style.boxShadow = 'none';
                }}
              >
                üìã Xem chi ti·∫øt ƒë·∫∑t ph√≤ng
              </button>
            </div>
          </div>
        </div>
      )}
      
      <NotificationContainer />
    </div>
  );
};

export default BookingCountdownModal;
